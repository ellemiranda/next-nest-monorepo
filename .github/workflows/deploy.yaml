name: Deploy

on:
  push:
    tags:
      - v*

jobs:
  define-jobs:
    name: Define Jobs
    outputs: 
      docker: ${{ steps.docker.outputs.matrix }}
      runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Environment Variables
        run: .github/common/set-env-vars.sh 
      - name: Define Docker jobs matrix
        id: docker
        run: .github/common/calculate-jobs.sh
        env:
          FILE: Dockerfile.ci

  docker:
    name: Publish Docker Artifacts
    needs: [ define-jobs ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.define-jobs.outputs.docker) }}
    steps:
      - uses: actions/checkout@v2

      - name: Set Environment Variables
        env:
          ROOT: ${{ matrix.folder }}
        run: .github/common/set-env-vars.sh

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      
      - name: Install NPM Dependencies
        run: npm ci

      - name: Add pre-release version to package
        run: .github/common/bump-version.sh
        env:
          TARGET: ${{ env.VERSION }}

      - name: Lerna Bootstrap
        run: npm run bootstrap -- --scope "@ess/$PROJECT"

      - name: Build Project
        run: npm run build -- --scope "@ess/$PROJECT"

      - name: Docker Login
        run: .github/common/docker-login.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Build Docker Image
        run: .github/common/docker-build.sh
        env:
          ROOT: ${{ matrix.folder }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Docker Image
        run: docker push "$DOCKER_TAG"
